<diagram program="umletino" version="15.1"><zoom_level>5</zoom_level><element><id>UMLPackage</id><coordinates><x>255</x><y>160</y><w>805</w><h>245</h></coordinates><panel_attributes>viewer
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>255</x><y>465</y><w>810</w><h>355</h></coordinates><panel_attributes>graphs
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>285</x><y>225</y><w>125</w><h>155</h></coordinates><panel_attributes>_EdgeView_
--
~polyX : int[ ]
~polyY : int[ ]
~smoothedX : int[ ]
~smoothedY : int[ ]
~smoothed : boolean
~color : Color
--
~EdgeView(int[ ], int[ ], Color, boolean)
-bezierCurve(double): Coord
-smoothPolyline() : void
~draw(Graphics2D) : void
~updatePosition(int, int) : void
~updateTransparency(int) : void
~updateSmoothed( boolean) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>595</x><y>190</y><w>215</w><h>190</h></coordinates><panel_attributes>_GraphCanvas_
--
~ smoothEdge : int = true
~nodeRadius : int = 5
~edgeTransparency : int = 60
__~MARGIN : int = 20__
__~NODE_COLOR : Color = Color.RED
__~EDGE_COLOR : Color = new Color(120, 120, 120, 60)__
--
~GraphCanvas()
-initNodeMap() : void
-initEdgeMap() : void
-initMaps() : void
+paint(Graphics) : void
~graphPositionToViewPosition(Coord, ArrayList&lt;Coord&gt;, boolean) : Coord
~setGraph(IGraph) : void
~setRadius (int) : void
~setEdgeTransparency(int) : void
~setSmooth(boolean) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>825</x><y>235</y><w>160</w><h>145</h></coordinates><panel_attributes>_GraphViewer_
--
~FRAME_WIDTH : int = 800
~FRAME_HEIGHT : int = 800
~SLIDER_WIDTH : int = 100
~BUTTON_HEIGHT : int = 40
~gc : GraphCanvas
--
+GraphViewer()
-buildUI() : void
+bundleGraph : void
+spanningTree : void
+clearGraph() : void
+loadGraph(String) : void
-updateGraphView() : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>425</x><y>275</y><w>125</w><h>105</h></coordinates><panel_attributes>_NodeView_
--
~radius : int
~color : Color
~x : int 
~y : int
--
~NodeView(int, int int, color)
~updateRadius(int) : void
~draw(Graphics2D) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>860</x><y>670</y><w>185</w><h>65</h></coordinates><panel_attributes>_GraphLoader_
--
--
__+loadFromFile(String, String) : Graph__
__-loadNodesFromFile(Graph, String) : HashMap&lt;Integer, Node&gt;__
__-loadEdgesFromFile(Graph, HashMap&lt;Integer, Node&gt;__

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>625</x><y>525</y><w>225</w><h>275</h></coordinates><panel_attributes>_&lt;&lt;Interface&gt;&gt; Igraph_
--
--
+addNode : Node
+addNode(Node) : Node
+ addEdge(Edge) : Edge
+ addEdge(Node, Node) : Edge
+ delNode(Node) : void
+delEdge(Edge) : void
+numberOfNodes() : int
+numberOfEdges() : int
+getNeighbors(Node) : ArrayList&lt;Node&gt;
+getSuccessors(Node) : ArrayList&lt;Node&gt;
+getPredecessors(Node) : ArrayList&lt;Node&gt;
+getInOutEdges(Node)
+getInEdges(Node) : ArrayList&lt;Edge&gt;
+getOutEdges(Node) :
+getNodes() : ArrayList&lt;Node&gt;
+getEdges() : ArrayList&lt;Edge&gt;
+source(Edge) : Node
+target(Edge) : Node
+inDegree(Node) : int
+outDegree(Node) : int
+degree(Node) : int
+existEdge(Node, Node, boolean) : boolean
+getEdge(Node, Node, boolean) : Edge
+getNodePosition(Node) : Coord
+getEdgePosition(Edge) : ArrayList&lt;Coord&gt;
+setNodePosition(Node, Coord) : void
+setEdgePosition(Edge, ArrayList&lt;Coord&gt;) : void
+setAllNodesPositions(Coord) : void
setAllEdgesPositions(ArrayList&lt;Coord&gt;) : void
+getBoundingBox() : ArrayList&lt;Coord&gt;
+getMinimumSpanningTree() : Graph
+bundle() : void









</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>335</x><y>375</y><w>45</w><h>265</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>70;510;10;510;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>845</x><y>375</y><w>50</w><h>190</h></coordinates><panel_attributes>lt=&lt;-
r1=graph
m1=1</panel_attributes><additional_attributes>10;350;80;350;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>835</x><y>375</y><w>55</w><h>160</h></coordinates><panel_attributes>lt=&lt;-
r1=spanningTree
m1=1</panel_attributes><additional_attributes>10;300;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>845</x><y>375</y><w>80</w><h>215</h></coordinates><panel_attributes>lt=&lt;-
r1=currentGraph
m1=1</panel_attributes><additional_attributes>10;400;140;400;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>665</x><y>375</y><w>30</w><h>160</h></coordinates><panel_attributes>lt=&lt;-
r1=graph
m1=1</panel_attributes><additional_attributes>10;300;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>545</x><y>310</y><w>60</w><h>25</h></coordinates><panel_attributes>lt=&lt;-
r1=nodeMap
m1=*</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>555</x><y>290</y><w>35</w><h>20</h></coordinates><panel_attributes>indexed 
by Node</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>405</x><y>240</y><w>200</w><h>25</h></coordinates><panel_attributes>lt=&lt;-
r1=edgeMap
m1=*</panel_attributes><additional_attributes>10;20;380;20</additional_attributes></element><element><id>UMLNote</id><coordinates><x>480</x><y>230</y><w>60</w><h>15</h></coordinates><panel_attributes>indexed by Edge</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>375</y><w>105</w><h>265</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;510;190;510;190;10</additional_attributes></element><element><id>Relation</id><coordinates><x>940</x><y>375</y><w>15</w><h>305</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;590;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>370</x><y>580</y><w>145</w><h>110</h></coordinates><panel_attributes>_Coord_
--
~x :double
~y : double
--
+ Coord(double, double)
+dist(Coord) : double
+getX() : double
+getY() : double
+setX(double) : double
+setY(double) : double</panel_attributes><additional_attributes></additional_attributes></element></diagram>