<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLPackage</id><coordinates><x>380</x><y>90</y><w>290</w><h>160</h></coordinates><panel_attributes>viewer
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>700</x><y>80</y><w>310</w><h>170</h></coordinates><panel_attributes>graphs
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>460</x><y>280</y><w>250</w><h>230</h></coordinates><panel_attributes>_EdgeView_
--
~polyX : int[ ]
~polyY : int[ ]
~smoothedX : int[ ]
~smoothedY : int[ ]
~smoothed : boolean
~color : Color
--
~EdgeView(int[ ], int[ ], Color, boolean)
-bezierCurve(double): Coord
-smoothPolyline() : void
~draw(Graphics2D) : void
~updatePosition(int, int) : void
~updateTransparency(int) : void
~updateSmoothed( boolean) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>560</y><w>260</w><h>240</h></coordinates><panel_attributes>_GraphCanvas_
--
~IGraph : graph
~nodeMap : Map&lt;Node, NodeView&gt;
~edgeMap : Map&lt;Edge, EdgeView&gt;
~ smoothEdge : int = true
~nodeRadius : int = 5
~edgeTransparency : int = 60
__~MARGIN : int = 20__
__~NODE_COLOR : Color = Color.RED

-----------------------------------------------------------
A CONTINUER
</panel_attributes><additional_attributes></additional_attributes></element></diagram>